type strArr = Array<string>;
type coordinate = {x: number, y: number};
// direction specifies the direction of the guard was moving when they entered a coordinate, not exited
type direction = 'up'|'right'|'down'|'left'
export type locationDirection = {location: coordinate, direction: direction}
const directions: Array<direction> = ['up', 'right', 'down', 'left']

export const testData: strArr = [
    '....#.....',
    '.........#',
    '..........',
    '..#.......',
    '.......#..',
    '..........',
    '.#..^.....',
    '........#.',
    '#.........',
    '......#...',
]

export const fullData: strArr = [
    '..........#...........#...........#.............................#......................#.........#................................',
    '..........................#.........#......#.................................#...........................#........................',
    '..................................#...#................................................................................#..........',
    '.#...............#.....#..........#.........#......#........#................................#......#.............................',
    '...#.......#.............#.............................................#.........##...............#.................#.............',
    '.......................................#.............#..................#........#.......#.........#...............#.........#....',
    '.....#..................#..#..#.........................#...................#....#........#.............................#.........',
    '.......#.............................#..........#......#..........................##......#.......................##..............',
    '.....#.....#........................................................................................#.......#.....................',
    '.................................#............#...#.....................................................#.........#...............',
    '...............#.....#..#....#....#.....................................................#............#........#.#.................',
    '.......#.....#...........................................................#............................#.................#....#....',
    '...........................#.................#....................................#...............#..#........................#...',
    '.....#.........................................#.................#...##....................................#......................',
    '.............#...#..................#......#.................#..........................................#.....#..........#........',
    '.................#...............#............#.......#.#...............................................#..................#......',
    '.....#..#.....................#.......................................................#..............#..............#.......##....',
    '..##........#....................................................#.............#..............#........................#..#.......',
    '..............................#...........#...#........................#............#..........................#........#........#',
    '.....................................##...............................#............#............#....#............................',
    '...##........................#.....#....#.........#.................................................#.............................',
    '...............................#................................#...............#.....#.....................#.....................',
    '................................................#..........#....#............................#.....#.......#..................#...',
    '.............#.....#.........#.#....#................##......#.............#......................................................',
    '..........#..............#..........#......#.........#...#.........................................#.#.....#.........#............',
    '..................#......................#.............................#...................#.....................................#',
    '................#.....#..............................#.............#.............#..#.....#....................................#..',
    '.........#.#................#.........#.................#...................#................................#................#...',
    '.............................................................#..............#.....................................................',
    '......#.........................#...........#.........#..................#....................................#..#...........##...',
    '.............................................................................#.............#........................#...#.........',
    '......#......#..#............#..............................................#....#..#..#................#.........#....#..........',
    '........#........#.........#....................................................^..#...#....................#...............#.....',
    '..#....#...#.......................................................................................................#..............',
    '.....#...........................................#..............#.........#....#........................................#.........',
    '.....................................#..............#............................................................#................',
    '.....#.......................#........................#..........#.............#.................#..................#.............',
    '.......................................#......#.....................................#.........................#...................',
    '...........................................................................................#............................##........',
    '..#............#..........................#...........#...#..................#......#.................#.#.................#......#',
    '.###......#....................#...#...........................................................#.........#.....#..............#.#.',
    '....................................#..........#.....#.......................#...............#.....#......#...................#...',
    '...#......#..................#......#.......#..............#..............#.......................................................',
    '..........#....................................................................#................##.#...#..........................',
    '.........................................................#..................##.....................#..##..........................',
    '..................#......#.................................#.................#.##................................................#',
    '...#..........#...#..#..............................................#...........................##........#.......................',
    '.....#................................................#...........#..................#...#.................................#......',
    '.......#.....#.........................#..........................................................................................',
    '....................................................#........#....#....................................##..............#.....#....',
    '............#........#.........................#.................................#..........................................#...#.',
    '.....................................#........................#...................#......#.#...........#..#..........#...........#',
    '................#...............#.........................#.........................#........#..#.................................',
    '.............#.........#.............#.#.#.........#...................#.......#.......................#..........................',
    '.............#......................................................#................................................#.......#....',
    '....#....................................................................#.#........#.................#..........................#',
    '.................................#......#....................................................................#.....#..............',
    '............##...................#.......................................................................#.........#........#.....',
    '#..................................................#..#...............#............#.............#...............................#',
    '.............................#.................................#.....#..........................#.............#..#...#...#........',
    '...#.....#..............................#.#......................................#................................................',
    '...#............##...............................#............#..............................#................................#...',
    '#.................#......##..............................................................#...........#........#...#...............',
    '....##.....................................................................................................#.#....................',
    '#.................#..................................................#..................................................#.........',
    '.........#.........#...........................#.................#.#.............................#................................',
    '................................#............#................................................................#...................',
    '.....................................#............................................#.##......##........#...........................',
    '....#....................................................#...#.#.#....................................................#...........',
    '.........................#.#...................#...................##...............#........................#....................',
    '..................................#...................................................................#.......#..................#',
    '...................#.............................................#.......................#.#.....................#....#...........',
    '#....................................#.#..#.#..........#.........#.........##.........#......................#............#.......',
    '...............................................................#.............................##....#.......#......................',
    '.............#......#.#.........#............................#............................#.......................................',
    '......................#.........#.........................................................#...#............#......................',
    '...................#.....#.....................................................#.....................................#............',
    '...............................#.....#..................#.......##................................................................',
    '.............................................#.........................#...........#..............................#..#............',
    '#..##..................................................................................................#......#...........#.....#.',
    '.......................................................#.....................#.............................#......................',
    '...........................................................................................................#......................',
    '......................#..............................................................#............................................',
    '...........................#.....#......................................#.........#........#..#.#.................................',
    '.#.......#........................................................................................................................',
    '.#.......#...........................................#................................#...........................................',
    '.........................................................#........................................#......#........................',
    '...............................#...#........#............................................#.................#......................',
    '......#.........................#......................#.....#.#..............#..................#.......#..................#.....',
    '.................#........#...#........................#.............................#............................................',
    '#...........................................................................#............................#................#.......',
    '..........................................................................#................#......................................',
    '.............#.............................................................................#.........................#............',
    '.#...........#.......#.......#.....#....#.......#........#....................#........................#........................#.',
    '...#..............#.............................#.............................................................#...#..#..........#.',
    '......#......#.#...............##................................................................................................#',
    '....#........#.##......#...#......................................................................................................',
    '..#..#.#.#.....................#................................#...................................#.....#...#...................',
    '.....................#.#........#..............##..............#.................#..............................................#.',
    '...................................................................................#........#.......#....#............#...........',
    '.....#....#..................#...............#.............................................#.#....................#...............',
    '.....................#..........#............#..................................#......................#.#.....#................#.',
    '..........#.........................................#...............#.............................................................',
    '.......#......................#.............#.....#..............#........................#.....#.........#.................#...#.',
    '..................................................................#.....#...............................................#........#',
    '.......#..........#.......#....#.......#..........#....#............................................#.#...........................',
    '..#...........#..............................#....................#....................#...#......................................',
    '.......#...............................#............#.....#.....................#.................................................',
    '.........#..................#..................#..................................................................................',
    '..........................................................................................#....#...................#.......##.....',
    '..................#.............................##.......................................................#.......#......#......#..',
    '...#.......#..............................................................................................#.......................',
    '............#..#..............................................................#...........##....#....#.#................#........#',
    '............#.........................#........#....#..#..................................#..................#....................',
    '......##......................#...##..............................#...............................................................',
    '........................#................#..............#...##...............................#..................##....#...........',
    '....#.#...#.....#..................................#..............................#...........#.....................#.............',
    '......................#.........................................................................#..........#.............#........',
    '.#......#............................................................#...............................#...#........................',
    '.......##.....................#.....#...........#......##.......##...................#...............................#............',
    '...#...#........#...............#......#......#.....#...#.................................................................#.......',
    '..................#.......................#...............................................#.................#.............#..#....',
    '.....................#.......#....#...#............................#.....................#............#.....................#.....',
    '................................................................#....#......#............#..................#.........#...........',
    '.......................#...................#..............................................................................###.....',
    '...............................#...........#................................#........#..#....#............................#.......',
    '....#......#...............................#...............#......................................#...............................',
    '...........#...........................##.........................................................................#.#.............',
    '.........................#.........#.........................................#.....#...................#.....#.......#............',
    '.............................#.....#................##..#.....................#...................................................',
]

export class Guard {
    grid: strArr;
    startCoordinate: coordinate | undefined;
    turns: number = 0
    locations: Set<string> = new Set();
    walkedLocationsDirections: Set<string> = new Set();
    possibleIntersections: Set<string> = new Set();
    intersections: Set<string> = new Set();
    possibleLoops: number = 0;
    constructor(input: strArr) {
        this.grid = input
        this.startCoordinate = identifyStart(this.grid)
        if (!this.startCoordinate) { return this }
        this.locations.add(JSON.stringify(this.startCoordinate))
        this.walkedLocationsDirections.add(JSON.stringify({location: this.startCoordinate, direction: 'up'}))
        trackBackwards(this.startCoordinate, 'up', this.possibleIntersections, this.grid)
        this.#walkRoute(this.startCoordinate, 'up')
        //test every walked location to see if the guard turned right, if they would end up in a loop
        this.walkedLocationsDirections.forEach((val) => {
            const LD: locationDirection = JSON.parse(val);
            const hypotheticalPivot: direction = pivot(directions.indexOf(LD.direction) + 1);
            LD.direction = hypotheticalPivot
            if (this.walkedLocationsDirections.union(this.possibleIntersections).has(JSON.stringify(LD))) {
                this.intersections.add(JSON.stringify(LD));
                this.possibleLoops++
            }
        })
        // this.possibleLoops = this.intersections.size
    }

    #walkRoute (startingCoordinate: coordinate, direction: direction): undefined {
        let {x, y} = Object.create(startingCoordinate);
        while (true) {
            const nextCoord: coordinate = getNextLocation({x, y}, direction)
            
            // end if next point is off map
            if (isOffMap(nextCoord.x, nextCoord.y, this.grid)) { break }
            
            // would placing an obstacle in front cause a loop?
            // const hypotheticalPivot: direction = pivot(this.turns + 1);
            // const hypotheticalLD: locationDirection = {location: {x, y}, direction: hypotheticalPivot}
            // if (this.walkedLocationsDirections.union(this.possibleIntersections).has(JSON.stringify(hypotheticalLD))) {
            //     this.intersections.add(JSON.stringify(hypotheticalLD));
            //     this.possibleLoops++
            // }
            // console.log({
            //     setToCheck: this.walkedLocationsDirections.union(this.possibleIntersections),
            //     hypotheticalLD,
            //     setHasHypo: this.walkedLocationsDirections.union(this.possibleIntersections).has(JSON.stringify(hypotheticalLD)),
            //     intersections: this.intersections
            // })

            // pivot if encounters obstacle
            if (this.grid[nextCoord.y][nextCoord.x] === '#') {
                direction = pivot(++this.turns);
                trackBackwards({x, y}, pivot(this.turns), this.possibleIntersections, this.grid)
                continue
            }
            x = nextCoord.x
            y = nextCoord.y
            const nextCoordAndDirection: locationDirection = {location: nextCoord, direction};
            const lDString = JSON.stringify(nextCoordAndDirection)
            // end if repeats a location/direction
            if (this.walkedLocationsDirections.has(lDString) || isOffMap(x, y, this.grid)) {
                break
            } else {
                this.walkedLocationsDirections.add(lDString);
                const lString = JSON.stringify(nextCoord)
                this.locations.add(lString);
            }
        }
        return
    }
}

const identifyStart = (grid: strArr) => {
    let x: number|undefined;
    let y: number|undefined;
    for (let i = 0; i < grid.length; i++) {
        const arr = grid[i].match(/\^/);
        if (!arr) {
            continue
        }
        y = i;
        x = arr.index;
        break
    }
    if (x && y) {
        return {x, y}
    } else {
        return undefined
    }
}

export const pivot = (turns: number): direction => {
    return directions[turns % 4]
}

export const getNextLocation = (currentCoordinate: coordinate, direction: direction) => {
    let {x, y} = Object.create(currentCoordinate);
    switch(direction) {
        case "up":
            y --;
            break
        case "right":
            x ++;
            break
        case "down":
            y ++;
            break
        case "left":
            x --;
            break
    }
    return {x, y}
}

const isOffMap = (x: number, y: number, grid: strArr) => {
    return x < 0 || x > grid[0].length - 1 || y < 0 || y > grid.length - 1;
}

export const trackBackwards = (
    startingCoordinate: coordinate,
    direction: direction,
    set: Set<string>,
    grid: strArr
) => {
    let {x, y} = Object.create(startingCoordinate);
    while (true) {
        const nextCoord: coordinate = getNextLocation({x, y}, pivot(directions.indexOf(direction) + 2))
        // end if next point is off map
        if (isOffMap(nextCoord.x, nextCoord.y, grid) || grid[nextCoord.y][nextCoord.x] === '#') { break }
        x = nextCoord.x
        y = nextCoord.y
        const nextCoordAndDirection: locationDirection = {location: nextCoord, direction};
        const lDString = JSON.stringify(nextCoordAndDirection)
        set.add(lDString);
    }
    return set
}

// ....#.....
// .........#
// ..........
// ..#.......
// ...0...#..
// ..........
// .#..^.....
// ........#.
// #.........
// ......#...